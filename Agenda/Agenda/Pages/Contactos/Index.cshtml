@page
@model Agenda.Pages.Contactos.IndexModel

@{
    ViewData["Title"] = "Lista de Contactos";
}



@* 
    public class Contacto
    {
        [Key]
        public int Id { get; set; }

        [Required(ErrorMessage = "El nombre de Contacto es obligatorio.")]
        [StringLength(30, ErrorMessage = "{0}nombre entre {2} y {1}", MinimumLength = 4)]
        public string nombre { get; set; }


        //[Required(ErrorMessage = "El nombre de Contacto es obligatorio.")]
        [StringLength(30, ErrorMessage = "{0}nombre entre {2} y {1}", MinimumLength = 4)]
        public string Email { get; set; }


        [StringLength(30, ErrorMessage = "{0}nombre entre {2} y {1}", MinimumLength = 4)]
        public string Telefono { get; set; }


        [DataType(DataType.Date)]
        [Display(Name = "Fecha de Creacion")]
        public DateTime? FechaCreacion { get; set; }


        // Relacionar Id.Contacto con Id.Categorias :
        [Required]
        public int CategoriaId { get; set; }
        
        //Instanciar Categorias 
        public Categoria Categorias { get; set; }


    }// class Contacto
*@



<div class="container">

    <div class="row">

        <div class="col-8">
            <h2 class="text-info">   Lista de Contactos  </h2>
        </div>

        <div class="col-2"> 
            <a class="btn btn-primary" asp-page="/Contactos/Crear">   Crear Contacto   </a>
        </div>

    </div>


    <br />
    <br />

    @if (Model.Contactos.Count() > 0)
    {
        <table  id="TblContactos" class="table table-striped table-bordered"
                 style="width:100%;">

            <thead>
                <tr>
                    <th> @Html.DisplayNameFor(m => m.Contactos.FirstOrDefault().Id) </th>
                    <th> @Html.DisplayNameFor(m => m.Contactos.FirstOrDefault().nombre) </th>
                    <th> @Html.DisplayNameFor(m => m.Contactos.FirstOrDefault().Email) </th>
                    <th> @Html.DisplayNameFor(m => m.Contactos.FirstOrDefault().Telefono) </th>
                    <th> @Html.DisplayNameFor(m => m.Contactos.FirstOrDefault().FechaCreacion) </th>
                    <th> @Html.DisplayNameFor(m => m.Contactos.FirstOrDefault().Categorias) </th>
                </tr>
            </thead>



            <tbody>

              @foreach( var vcontacto in Model.Contactos)
              {
                <tr>
                    <td>@Html.DisplayFor( m => vcontacto.Id)                </td>
                    <td>@Html.DisplayFor( m => vcontacto.nombre)            </td>
                    <td>@Html.DisplayFor( m => vcontacto.Email)             </td>
                    <td>@Html.DisplayFor( m => vcontacto.Telefono)          </td>
                    <td>@Html.DisplayFor( m => vcontacto.FechaCreacion )    </td>
                    <td>@Html.DisplayFor( m => vcontacto.Categorias.nombre)        </td>
                    <td>
                        <a class="btn btn-success" asp-page="../Contactos/Detalle" asp-route-id ="@vcontacto.Id" >Detalle</a>
                        <a class="btn btn-warning" asp-page="../Contactos/Editar"  asp-route-id ="@vcontacto.Id" >Editar</a>
                        <a class="btn btn-danger"  asp-page="../Contactos/Borrar"  asp-route-id ="@vcontacto.Id" >Borrar</a>
                    </td>
                </tr>                    
              }


            </tbody>

        </table>

      } else 
      {
         <p> No hay Categorias. </p>
      }


</div>
